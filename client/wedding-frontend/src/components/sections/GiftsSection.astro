---
import { weddingData } from '../../data/wedding-data.js';
import Card from '../ui/Card.astro';
import Button from '../ui/Button.astro';

let apiData;

type GiftItem = {
    id: string;
    title: string;
    price: number;
};

try {
    const response = await fetch('https://saraeartur-wedding-api.onrender.com/api/gifts');
    apiData = await response.json();
} catch (error) {
    console.error('Erro ao carregar os Gifts da API: ', error);
    apiData = [];
}
---

<section id="presentes" class="py-20 bg-slate-50">
    <div class="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8">
        <!-- Section Title -->
        <div class="text-center mb-16">
            <h2 class="text-4xl md:text-5xl font-bold text-slate-700 mb-6">Vamos morar na Argentina!</h2>
            <p class="text-lg text-slate-600 max-w-4xl mx-auto leading-relaxed mb-6">
                Como estamos nos preparando para nos <strong>mudar para outro país</strong> após o casamento, não poderemos
                receber os presentes aqui, pois seria inviável levá-los na viagem e será necessário comprar todos os itens
                da nossa casa nova lá. Sendo assim, caso queira nos presentear, pode escolher um dos itens abaixo e realizar
                o pagamento aqui pelo site. Sua contribuição, independente do tamanho, será profundamente apreciada e nos
                ajudará a estabelecer o nosso lar.
            </p>
            <p class="text-base text-slate-500 max-w-3xl mx-auto">
                Todos os pagamentos são processados com segurança através do MercadoPago, garantindo que sua transação
                seja segura e confiável.
            </p>
        </div>

        <!-- Gift Options Grid -->
        <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-6 mb-12">
            {
                Array.isArray(apiData) &&
                    apiData.map((category) => (
                        <Card>
                            <div class="text-center">
                                <h3 class="text-lg font-semibold text-slate-700 mb-2">{category.title}</h3>
                                {Array.isArray(category.items) && category.items.length && (
                                    <div class="space-y-2">
                                        {category.items.map((item: GiftItem) => (
                                            <div class="flex justify-between items-center space-x-4 bg-slate-100 rounded-md p-2">
                                                <p class="text-left text-slate-700">
                                                    {item.title === 'Escorregador de louça'
                                                        ? 'Escorredor de louça'
                                                        : item.title === 'Tapetes pro banheiro'
                                                          ? 'Tapetes banheiro'
                                                          : item.title === 'Kit toalhas de banho'
                                                            ? 'Toalhas banho'
                                                            : item.title}
                                                </p>
                                                <div class="flex items-center space-x-4">
                                                    <span class="text-slate-600">
                                                        R$ {item.price.toLocaleString('pt-BR') ?? item.price}
                                                    </span>
                                                    <Button
                                                        variant="success"
                                                        size="sm"
                                                        class="whitespace-nowrap gift-btn"
                                                        data-gift-id={item.id}
                                                        data-gift-title={item.title}
                                                        data-gift-price={item.price}
                                                    >
                                                        Presentear
                                                    </Button>
                                                </div>
                                            </div>
                                        ))}
                                    </div>
                                )}
                            </div>
                        </Card>
                    ))
            }
            <Card>
                <div class="text-center">
                    <h3 class="text-lg font-semibold text-slate-700 mb-2">Valor Personalizado</h3>
                    <label for="customAmount" class="text-slate-600 mb-4">
                        Fique à vontade para escolher o valor do presente.
                    </label>
                    <div class="space-y-3">
                        <input
                            id="customAmount"
                            inputmode="numeric"
                            pattern="[0-9]*"
                            maxlength="12"
                            placeholder="Insira um valor"
                            class="w-full px-3 py-2 border border-slate-300 rounded-md focus:outline-none focus:border-slate-500 focus:ring-2 text-slate-600 focus:ring-slate-500 text-center"
                        />
                        <Button
                            id="customGiftBtn"
                            variant="success"
                            size="sm"
                            class="w-full gift-btn"
                            data-gift-type="custom"
                        >
                            Presentear
                        </Button>

                        <script is:inline>
                            // Máscara do input de valor const input =
                            const input = document.getElementById('customAmount');
                            if (input) {
                                input.addEventListener('input', () => {
                                    const digits = input.value.replace(/\D/g, '');
                                    const number = parseInt(digits || '0', 10);
                                    let formatted;
                                    formatted = (number / 100).toLocaleString('pt-BR', {
                                        style: 'currency',
                                        currency: 'BRL',
                                    });
                                    input.value = formatted;
                                });
                            }
                        </script>
                    </div>
                </div>
            </Card>
        </div>

        <!-- Modal para nome e sobrenome -->
        <div id="nameModal" class="fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50 hidden">
            <div class="bg-white rounded-xl shadow-2xl p-8 max-w-md w-full mx-4 transform transition-all">
                <div class="text-center">
                    <!-- Modal Icon -->
                    <div class="w-16 h-16 bg-slate-100 rounded-full flex items-center justify-center mx-auto mb-6">
                        <svg class="w-8 h-8 text-slate-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path
                                stroke-linecap="round"
                                stroke-linejoin="round"
                                stroke-width="2"
                                d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
                        </svg>
                    </div>

                    <!-- Modal Title -->
                    <h3 class="text-2xl font-bold text-slate-700 mb-2">Como se chama?</h3>
                    <p class="text-slate-600 mb-6">Por favor, insira seu nome e sobrenome.</p>

                    <!-- Form Fields -->
                    <div class="space-y-4 mb-8">
                        <div>
                            <input
                                id="modalName"
                                type="text"
                                maxlength="50"
                                placeholder="Nome"
                                class="w-full px-4 py-3 border border-slate-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-slate-500 focus:border-slate-500 text-slate-700 transition-all"
                                required
                            />
                        </div>
                        <div>
                            <input
                                id="modalSurname"
                                type="text"
                                maxlength="70"
                                placeholder="Sobrenome"
                                class="w-full px-4 py-3 border border-slate-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-slate-500 focus:border-slate-500 text-slate-700 transition-all"
                                required
                            />
                        </div>
                    </div>

                    <!-- Action Buttons -->
                    <div class="flex flex-col sm:flex-row gap-3">
                        <button
                            id="modalCancel"
                            class="flex-1 px-6 py-3 bg-slate-100 hover:bg-slate-200 rounded-lg text-slate-700 font-medium transition-colors"
                        >
                            Cancelar
                        </button>
                        <button
                            id="modalConfirm"
                            class="flex-1 px-6 py-3 bg-slate-600 hover:bg-slate-700 rounded-lg text-white font-medium transition-colors"
                        >
                            Ir para o Pagamento
                        </button>
                    </div>
                </div>
            </div>
        </div>

        <script is:inline>
            let selectedGiftData = null;

            const getModal = () => document.getElementById('nameModal');
            const getNameInput = () => document.getElementById('modalName');
            const getSurnameInput = () => document.getElementById('modalSurname');
            const getCustomAmountInput = () => document.getElementById('customAmount');
            const getModalCancel = () => document.getElementById('modalCancel');
            const getModalConfirm = () => document.getElementById('modalConfirm');

            // Abrir modal (e guardar dados do presente)
            function openModal(giftData) {
                selectedGiftData = giftData;
                const modal = getModal();
                if (modal) {
                    modal.classList.remove('hidden');
                    setTimeout(() => getNameInput()?.focus(), 50);
                }
            }

            // Fechar modal (e limpar campos)
            function closeModal() {
                getModal()?.classList.add('hidden');
                getNameInput().value = '';
                getSurnameInput().value = '';
                selectedGiftData = null;
            }

            // Validação simples dos campos
            function validateForm() {
                const name = getNameInput().value.trim();
                const surname = getSurnameInput().value.trim();
                if (name.length < 2 || surname.length < 2) {
                    alert('Preencha nome e sobrenome corretamente.');
                    return false;
                }
                return true;
            }

            // Máscara para o input de valor personalizado
            function setupCustomAmountMask() {
                const input = getCustomAmountInput();
                if (input) {
                    input.addEventListener('input', () => {
                        const digits = input.value.replace(/\D/g, '');
                        const number = parseInt(digits || '0', 10);
                        input.value = number
                            ? (number / 100).toLocaleString('pt-BR', { style: 'currency', currency: 'BRL' })
                            : '';
                    });
                }
            }

            // Pagamento integrado com a API
            async function processPayment() {
                if (!validateForm() || !selectedGiftData) return;

                const giftData = { ...selectedGiftData };
                const payerName = getNameInput().value.trim();
                const payerSurname = getSurnameInput().value.trim();

                // 1. Abre nova aba imediatamente e escreve tela de "Aguarde..."
                const loadingTab = window.open('', '_blank');
                if (loadingTab) {
                    // Página de loading simples, mobile-first e personalizada
                    loadingTab.document.write(`
                        <html lang="pt-BR">
                        <head>
                            <meta charset="UTF-8" />
                            <meta name="viewport" content="width=device-width,initial-scale=1" />
                            <title>Redirecionando...</title>
                            <style>
                                body { display: flex; flex-direction: column; justify-content: center; align-items: center; height: 100vh; margin: 0; background: #f8fafc; font-family: system-ui, sans-serif; }
                                .spinner { margin: 30px 0 20px 0; border: 4px solid #e5e7eb; border-top: 4px solid #64748b; border-radius: 50%; width: 44px; height: 44px; animation: spin 1s linear infinite;}
                                @keyframes spin { 100% { transform: rotate(360deg); } }
                                .msg { color: #334155; font-size: 1.15rem; text-align: center; }
                                .branding { color: #64748b; font-size: 0.93rem; margin-top: 20px; }
                            </style>
                        </head>
                        <body>
                            <div class="spinner"></div>
                            <div class="msg">Aguarde, você será redirecionado<br>ao pagamento seguro do Mercado Pago.</div>
                            <div class="branding">Sara & Artur | Casamento 2025</div>
                        </body>
                        </html>
                    `);
                    loadingTab.document.close();
                } else {
                    alert('Por favor, permita pop-ups para concluir seu presente.');
                    return;
                }

                closeModal();

                try {
                    let endpoint = '';
                    let body = {};

                    if (giftData.type === 'custom') {
                        // Valor personalizado
                        endpoint = 'https://saraeartur-wedding-api.onrender.com/api/custom-gift';
                        body = {
                            amount: giftData.price,
                            payerName,
                            payerSurname,
                        };
                    } else {
                        // Presente pré-definido
                        endpoint = `https://saraeartur-wedding-api.onrender.com/api/checkout/${giftData.id}`;
                        body = {
                            payerName,
                            payerSurname,
                        };
                    }

                    const res = await fetch(endpoint, {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify(body),
                    });
                    
                    if (!res.ok) {
                        loadingTab.close();
                        alert('Erro ao gerar pagamento. Tente novamente.');
                        return;
                    }

                    const data = await res.json();
                    if (data && data.url) {
                        loadingTab.location.href = data.url;
                    } else {
                        loadingTab.close();
                        alert('Falha ao obter link de pagamento.');
                    }
                } catch (err) {
                    loadingTab.close();
                    alert('Erro inesperado ao processar o pagamento. ' + err.message);
                }
            }

            document.addEventListener('DOMContentLoaded', () => {
                setupCustomAmountMask();

                // Handler para botões dos presentes
                document.querySelectorAll('.gift-btn').forEach((btn) => {
                    btn.addEventListener('click', (e) => {
                        e.preventDefault();
                        let giftData = {};

                        if (btn.hasAttribute('data-gift-id')) {
                            // Presente específico
                            giftData = {
                                type: 'specific',
                                id: btn.getAttribute('data-gift-id'),
                                title: btn.getAttribute('data-gift-title'),
                                price: parseFloat(btn.getAttribute('data-gift-price')),
                            };
                        } else if (
                            btn.hasAttribute('data-gift-type') &&
                            btn.getAttribute('data-gift-type') === 'custom'
                        ) {
                            // Presente customizado
                            const input = getCustomAmountInput();
                            if (!input) return;
                            const value = parseInt(input.value.replace(/\D/g, ''), 10) / 100;
                            if (value < 10) {
                                alert('O valor mínimo é R$ 10,00');
                                return;
                            }
                            giftData = {
                                type: 'custom',
                                title: 'Valor Personalizado',
                                price: value,
                            };
                        }
                        openModal(giftData);
                    });
                });

                // Modal: cancelar e confirmar
                getModalCancel()?.addEventListener('click', closeModal);
                getModalConfirm()?.addEventListener('click', processPayment);

                // Fechar modal ao clicar fora dele
                getModal()?.addEventListener('click', (e) => {
                    if (e.target === getModal()) closeModal();
                });

                // Fechar modal com ESC
                document.addEventListener('keydown', (e) => {
                    if (e.key === 'Escape') closeModal();
                });

                // Submit do formulário com Enter
                [getNameInput(), getSurnameInput()].forEach((input) => {
                    if (input) {
                        input.addEventListener('keydown', (e) => {
                            if (e.key === 'Enter') {
                                e.preventDefault();
                                processPayment();
                            }
                        });
                    }
                });
            });
        </script>

        <!-- Thank You Message -->
        <Card class="max-w-4xl mx-auto">
            <div class="text-center">
                <h3 class="text-5xl heading-script text-slate-700 mb-4">Obrigado</h3>
                <p class="text-slate-600 leading-relaxed mb-4">
                    Sua generosidade significa muito para nós. Cada presente nos ajudará a construir nossa nova vida
                    juntos em nosso novo país. Estamos ansiosos para compartilhar atualizações com você sobre nossa
                    jornada e como seus presentes nos ajudaram ao longo do caminho.
                </p>
                <p class="text-slate-600">
                    Com amor e gratidão,<br />
                    <span class="heading-script text-3xl text-amber-500"
                        >{weddingData.couple.groom} & {weddingData.couple.bride}</span
                    >
                </p>
            </div>
        </Card>
    </div>
</section>
